# round() 함수

round(1.23456, 2) # 소수점 둘째 자리로 반올림
# >> 1.23

round(2.675, 2)
# >> 2.67
# 결과가 2.68이 아닌 2.67로 나오는 이유는, 부동소수점 연산의 한계 때문!

# Q. 고무 공을 100미터 높이에서 떨어뜨리는데,
# 이 공은 땅에 닿을 때마다 원래 높이의 3/5만큼 튀어오릅니다.
# 공이 열 번 튈 동안, 그때마다 공의 높이를 계산합니다.

# 1 60.0
# 2 36.0
# 3 21.599999999999998
# 4 12.959999999999999
# 5 7.775999999999999
# 6 4.6655999999999995
# 7 2.7993599999999996
# 8 1.6796159999999998
# 9 1.0077695999999998
# 10 0.6046617599999998

# round()함수를 사용해서, 다음과 같이 소수점 아래 네 자리까지 출력!
# 100미터 높이, 땅 닿을 때마다 5/3만큼, 10번 튈 동안 높이 계산
h = 100
nack = 3 /5 
i = 1

while i <= 10 :
    h = h * nack
    print(i, round(h,4))
    i = i + 1